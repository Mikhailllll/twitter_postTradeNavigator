name: Twitter Poster

on:
  schedule:
    - cron: "*/5 * * * *"
  workflow_dispatch:

permissions:
  contents: write

jobs:
  post:
    runs-on: ubuntu-latest
    env:
      TELETHON_API_ID: ${{ secrets.TELETHON_API_ID }}
      TELETHON_API_HASH: ${{ secrets.TELETHON_API_HASH }}
      TELETHON_SESSION: ${{ secrets.TELETHON_SESSION }}
      TWITTER_API_KEY: ${{ secrets.TWITTER_API_KEY }}
      TWITTER_API_SECRET: ${{ secrets.TWITTER_API_SECRET }}
      TWITTER_ACCESS_TOKEN: ${{ secrets.TWITTER_ACCESS_TOKEN }}
      TWITTER_ACCESS_SECRET: ${{ secrets.TWITTER_ACCESS_SECRET }}
      DEEPSEEK_API_KEY: ${{ secrets.DEEPSEEK_API_KEY }}
      DRY_RUN: ${{ vars.DRY_RUN || 'false' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Mask secrets
        shell: bash
        run: |
          set -euo pipefail
          for var in TELETHON_API_ID TELETHON_API_HASH TELETHON_SESSION \
            TWITTER_API_KEY TWITTER_API_SECRET TWITTER_ACCESS_TOKEN TWITTER_ACCESS_SECRET \
            DEEPSEEK_API_KEY; do
            value="${!var-}"
            if [ -n "$value" ]; then
              echo "::add-mask::$value"
            fi
          done

      - name: Validate required environment
        shell: bash
        run: |
          set -euo pipefail
          missing=()
          for var in TELETHON_API_ID TELETHON_API_HASH TELETHON_SESSION \
            TWITTER_API_KEY TWITTER_API_SECRET TWITTER_ACCESS_TOKEN TWITTER_ACCESS_SECRET \
            DEEPSEEK_API_KEY; do
            if [ -z "${!var-}" ]; then
              missing+=("$var")
            fi
          done
          if [ "${#missing[@]}" -ne 0 ]; then
            echo "Отсутствуют переменные окружения: ${missing[*]}" >&2
            exit 1
          fi

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Cache pip dependencies
        if: hashFiles('requirements.txt') != ''
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        if: hashFiles('requirements.txt') != ''
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Twitter poster
        run: python -m src.main

      - name: Detect state changes
        id: state_diff
        shell: bash
        run: |
          set -euo pipefail
          if git status --porcelain -- state.json | grep -q "."; then
            echo "changed=true" >> "$GITHUB_OUTPUT"
          else
            echo "changed=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Commit updated state
        if: steps.state_diff.outputs.changed == 'true' && env.DRY_RUN == 'false'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        shell: bash
        run: |
          set -euo pipefail
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add state.json
          git commit -m "[ci] update state"
          git push
